<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xhj.dao.OrdeMapper">
  <resultMap id="BaseResultMap" type="com.xhj.bean.Orde">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="dname" jdbcType="VARCHAR" property="dname" />
    <result column="onumber" jdbcType="INTEGER" property="number" />
    <result column="price" jdbcType="VARCHAR" property="price" />
    <result column="taste" jdbcType="VARCHAR" property="taste" />
    <result column="sid" jdbcType="INTEGER" property="sid" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, dname, onumber, price, taste, sid
  </sql>
  <select id="selectByExample" parameterType="com.xhj.bean.OrdeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orde
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orde
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orde
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xhj.bean.OrdeExample">
    delete from orde
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xhj.bean.Orde">
    insert into orde (id, dname, onumber,
      price, taste, sid)
    values (#{id,jdbcType=INTEGER}, #{dname,jdbcType=VARCHAR}, #{number,jdbcType=INTEGER}, 
      #{price,jdbcType=VARCHAR}, #{taste,jdbcType=VARCHAR}, #{sid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xhj.bean.Orde">
    insert into orde
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dname != null">
        dname,
      </if>
      <if test="onumber != null">
        onumber,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="taste != null">
        taste,
      </if>
      <if test="sid != null">
        sid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="dname != null">
        #{dname,jdbcType=VARCHAR},
      </if>
      <if test="onumber != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=VARCHAR},
      </if>
      <if test="taste != null">
        #{taste,jdbcType=VARCHAR},
      </if>
      <if test="sid != null">
        #{sid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xhj.bean.OrdeExample" resultType="java.lang.Long">
    select count(*) from orde
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orde
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.dname != null">
        dname = #{record.dname,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null">
        onumber = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=VARCHAR},
      </if>
      <if test="record.taste != null">
        taste = #{record.taste,jdbcType=VARCHAR},
      </if>
      <if test="record.sid != null">
        sid = #{record.sid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orde
    set id = #{record.id,jdbcType=INTEGER},
      dname = #{record.dname,jdbcType=VARCHAR},
      onumber = #{record.number,jdbcType=INTEGER},
      price = #{record.price,jdbcType=VARCHAR},
      taste = #{record.taste,jdbcType=VARCHAR},
      sid = #{record.sid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xhj.bean.Orde">
    update orde
    <set>
      <if test="dname != null">
        dname = #{dname,jdbcType=VARCHAR},
      </if>
      <if test="onumber != null">
        onumber = #{number,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=VARCHAR},
      </if>
      <if test="taste != null">
        taste = #{taste,jdbcType=VARCHAR},
      </if>
      <if test="sid != null">
        sid = #{sid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xhj.bean.Orde">
    update orde
    set dname = #{dname,jdbcType=VARCHAR},
      onumber = #{number,jdbcType=INTEGER},
      price = #{price,jdbcType=VARCHAR},
      taste = #{taste,jdbcType=VARCHAR},
      sid = #{sid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectod" resultMap="BaseResultMap">
      select * from orde ORDER BY id
  </select>

  <select id="selectuserid" resultMap="BaseResultMap" parameterType="java.lang.Integer">
      select * from orde where userid=#{id} ORDER BY id
  </select>
  
  <select id="selectmax" resultType="java.lang.String">
      SELECT MAX(id) FROM orde
  </select>
  
  <delete id="deleteoid" parameterType="java.lang.Integer">
      DELETE FROM orde WHERE id=#{id}
  </delete>

  <insert id="insertorder" parameterType="com.xhj.bean.Orde">
    INSERT INTO orde values(#{id},#{dname},#{number},#{price},#{taste},#{sid},#{sj},#{userid})
  </insert>

  <select id="selectid" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select * from orde where id=#{id}
  </select>
</mapper>